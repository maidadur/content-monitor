// <auto-generated />
using System;
using Maid.Binance.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Maid.Binance.DB.Migrations
{
    [DbContext(typeof(BinanceDbContext))]
    partial class BinanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Maid.Binance.DB.BinanceOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Commission")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CommissionAsset")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("CreatedOn"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Leverage")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Pnl")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Side")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("BinanceOrders");
                });

            modelBuilder.Entity("Maid.Binance.DB.BinanceOrderEmotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BinanceOrderId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("CreatedOn"));

                    b.Property<string>("Emotion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BinanceOrderId");

                    b.ToTable("BinanceOrderEmotion");
                });

            modelBuilder.Entity("Maid.Binance.DB.BinanceOrderTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BinanceOrderId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("CreatedOn"));

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BinanceOrderId");

                    b.ToTable("BinanceOrderTag");
                });

            modelBuilder.Entity("Maid.Binance.DB.BinanceTrade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<decimal>("Commission")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("CommissionAsset")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("CreatedOn"));

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Pnl")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Side")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("Time")
                        .HasColumnType("bigint");

                    b.Property<long>("TradeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("BinanceTrades");
                });

            modelBuilder.Entity("Maid.Binance.DB.BinanceOrderEmotion", b =>
                {
                    b.HasOne("Maid.Binance.DB.BinanceOrder", "BinanceOrder")
                        .WithMany()
                        .HasForeignKey("BinanceOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BinanceOrder");
                });

            modelBuilder.Entity("Maid.Binance.DB.BinanceOrderTag", b =>
                {
                    b.HasOne("Maid.Binance.DB.BinanceOrder", "BinanceOrder")
                        .WithMany()
                        .HasForeignKey("BinanceOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BinanceOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
